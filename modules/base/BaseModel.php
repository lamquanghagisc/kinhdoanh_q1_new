<?php
/**
 * Created by PhpStorm.
 * User: Duc
 * Date: 7/5/2021
 * Time: 11:28 PM
 */

namespace app\modules\base;


use app\modules\quanlydancu\models\ThongTinTimKiem;
use Yii;
use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;

class BaseModel extends ActiveRecord
{

    const CHU_HO = 1;
    const ACTIVE = 1;
    const INACTIVE = 2;

    public static $STATUS = ['ACTIVE' => 1, 'INACTIVE' => 0, 'DRAFT' => 2];

    public static function createMultiple($modelClass, $multipleModels = [])
    {
        $model = new $modelClass;
        $formName = $model->formName();
        $post = Yii::$app->request->post($formName);
        $models = [];

        if (!empty($multipleModels)) {
            $keys = array_keys(ArrayHelper::map($multipleModels, 'id', 'id'));
            $multipleModels = array_combine($keys, $multipleModels);
        }

        if ($post && is_array($post)) {
            foreach ($post as $i => $item) {
                if (isset($item['id']) && !empty($item['id']) && isset($multipleModels[$item['id']])) {
                    $models[] = $multipleModels[$item['id']];
                } else {
                    $models[] = new $modelClass;
                }
            }
        }

        unset($model, $formName, $post);

        return $models;
    }

    public function afterSave($insert, $changedAttributes)
    {
        if ($this->hasAttribute('geom')){
            $tableName = $this->tableName();
            \Yii::$app->db->createCommand("UPDATE $tableName SET geom = ST_GeomFromText('POINT($this->long $this->lat)',4326) WHERE id=:id")
                ->bindValue(':id', $this->id)
                ->execute();
            parent::afterSave($insert, $changedAttributes);
        }
    }

    public function beforeSave($insert)
    {
        //dd($this);
        date_default_timezone_set('Asia/Ho_Chi_Minh');
        if ($this->isNewRecord) {
            $this->status = self::$STATUS['ACTIVE'];
            $this->created_at = date('Y-m-d H:i:s');
            $this->created_by = (\Yii::$app->user != null) ? \Yii::$app->user->id : 0;
        } else {

            $this->updated_at = date('Y-m-d H:i:s');
            $this->updated_by = (\Yii::$app->user != null) ? \Yii::$app->user->id : 0;
        }

        if ($this->hasAttribute('diachi') && $this->hasAttribute('phuongxa_id')) {
            $diachis = [];
            if($this->hasAttribute('sonha') && trim($this->sonha) != ''){$diachis[] = $this->sonha;}
            if($this->hasAttribute('tenduong')  && trim($this->tenduong) != null && $this->tenduong != ''){ $diachis[] = $this->tenduong;}
            if($this->hasAttribute('tento')  && trim($this->tento) != null){
                $diachis[] = 'Tổ ' . $this->tento;
            }
            if(strpos($this->phuongxa->tenphuong,"Phường") !== false){
                if($this->hasAttribute('khupho')  && trim($this->khupho) != ''){$diachis[] = $this->khupho == '' ? '' : 'Khu phố ' . $this->khupho;}
            }
            else{
                if($this->hasAttribute('khupho')  && trim($this->khupho) != ''){$diachis[] = $this->khupho == '' ? '' : $this->khupho;}
            }

            if($this->phuongxa != null){$diachis[] = $this->phuongxa->tenphuong == '' ? '' : $this->phuongxa->tenphuong;}
            if($this->phuongxa != null){$diachis[] = $this->phuongxa->tenquan == '' ? '' : $this->phuongxa->tenquan;}
          //  if($this->hasAttribute('phuongxa')){$diachis[] = $this->phuongxa->tenphuong;}
            $diachis[] = 'Thành phố Hồ Chí Minh';
            $this->diachi = implode(', ', array_filter($diachis));
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterFind()
    {
        if ($this->hasAttribute('ngaycap')) {
            if ($this->ngaycap != null){
                $this->ngaycap = date('d-m-Y', strtotime($this->ngaycap));
            }
        }
        if ($this->hasAttribute('ngayhethan')) {
            if ($this->ngayhethan != null){
                $this->ngayhethan = date('d-m-Y', strtotime($this->ngayhethan));
            }
        }

        parent::afterFind(); // TODO: Change the autogenerated stub
    }
}